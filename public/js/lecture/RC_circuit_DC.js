
var parameters = {"id":"applet",
	"width":650,
	"height":425,
	
	"ggbBase64":"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"

}
parameters.appletOnLoad = function(api){
	var boolDIS = true;
	var boolC = true;
	var Vol = document.getElementById("Vol");
	var Res = document.getElementById('Res');
	var Cap = document.getElementById('Cap');
	document.getElementById("Cap").value = 1;
	document.getElementById("Vol").value = 1;
	document.getElementById("Res").value = 1;
	document.getElementById("DischargeButton").onclick = function () {
		boolDIS = change(boolDIS);
		api.setValue('Discharging',boolDIS);
	};
	document.getElementById("ChargingButton").onclick = function () {
		boolC = change(boolC);
		api.setValue('Charging',boolC);
	};
	document.getElementById("a1").onclick = function () {
		
		api.setValue('alpha',1);
	};
	document.getElementById("a5").onclick = function () {
		
		api.setValue('alpha',5);
	};

	function change(bool){
		if(bool == true){
			bool = false;
			return bool;
		}
		bool = true;
		return bool;
	}

	setInterval(function(){ 
		// alert(document.getElementById("Vol").value);
		api.setValue('r',parseFloat(Res.value));
		api.setValue('a',parseFloat(Vol.value));
		api.setValue('c',parseFloat(Cap.value))
		

	}, 100);
	//api.setAxisLabels(2,"Voltage","Current");
	
}
var applet = new GGBApplet(parameters, '5.0');

 
//  when used with Math Apps Bundle, uncomment this:
//  applet.setHTML5Codebase('GeoGebra/HTML5/5.0/web3d/');
applet.inject('ggb');


